{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import * as fs from \"fs\";\nimport * as path from \"path\";\n\nconst scriptExtList = [\".ts\", \".js\", \".mjs\"];\nconst featuresDir = path.join(__dirname, \"schema\");\n\nasync function loadFeatures() {\n  const items = fs.readdirSync(featuresDir);\n  const featureList = [];\n\n  for (const item of items) {\n    const itemPath = path.join(featuresDir, item);\n\n    if (fs.statSync(itemPath).isDirectory()) {\n      const indexFile = path.join(itemPath, \"index.ts\");\n      if (fs.existsSync(indexFile)) {\n        featureList.push(indexFile);\n      }\n    } else if (scriptExtList.includes(path.extname(item))) {\n      featureList.push(itemPath);\n    }\n  }\n\n  const loadedFeatures = await Promise.all(\n    featureList.map(async (filePath, index) => {\n      const relativePath = filePath.replace(__dirname + path.sep, \"./\");\n      const module = await import(relativePath);\n\n      return {\n        defaultFunc: module.default,\n        namedExports: module,\n      };\n    })\n  );\n\n  console.log(\"Loaded features:\", loadedFeatures);\n}\n\nloadFeatures();\n"],
  "mappings": ";AAAA,YAAY,QAAQ;AACpB,YAAY,UAAU;AAEtB,IAAM,gBAAgB,CAAC,OAAO,OAAO,MAAM;AAC3C,IAAM,cAAmB,UAAK,WAAW,QAAQ;AAEjD,eAAe,eAAe;AAC5B,QAAM,QAAW,eAAY,WAAW;AACxC,QAAM,cAAc,CAAC;AAErB,aAAW,QAAQ,OAAO;AACxB,UAAM,WAAgB,UAAK,aAAa,IAAI;AAE5C,QAAO,YAAS,QAAQ,EAAE,YAAY,GAAG;AACvC,YAAM,YAAiB,UAAK,UAAU,UAAU;AAChD,UAAO,cAAW,SAAS,GAAG;AAC5B,oBAAY,KAAK,SAAS;AAAA,MAC5B;AAAA,IACF,WAAW,cAAc,SAAc,aAAQ,IAAI,CAAC,GAAG;AACrD,kBAAY,KAAK,QAAQ;AAAA,IAC3B;AAAA,EACF;AAEA,QAAM,iBAAiB,MAAM,QAAQ;AAAA,IACnC,YAAY,IAAI,OAAO,UAAU,UAAU;AACzC,YAAM,eAAe,SAAS,QAAQ,YAAiB,UAAK,IAAI;AAChE,YAAM,SAAS,MAAM,OAAO;AAE5B,aAAO;AAAA,QACL,aAAa,OAAO;AAAA,QACpB,cAAc;AAAA,MAChB;AAAA,IACF,CAAC;AAAA,EACH;AAEA,UAAQ,IAAI,oBAAoB,cAAc;AAChD;AAEA,aAAa;",
  "names": []
}
